{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","ReorderGoods","goods","reverse","type","initialGoods","sort","a","b","localeCompare","length","App","useState","NONE","sortType","useType","useReverse","ChangeType","ChangeReverse","reverseType","className","ALPHABET","onClick","LENGTH","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcF,SAASC,EAAaC,EAAtB,GAA2E,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,KAC1CC,EAAY,YAAOH,GAEzB,OAAQE,GACN,KAAK,EACHC,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,KAAK,EACHH,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAW7C,OAJIP,GACFE,EAAaF,UAGRE,G,SA/BJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkCE,IAAMY,EAAgB,WAC3B,MAA4BC,mBAASb,EAASc,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOT,EAAP,KAAgBa,EAAhB,KAEA,SAASC,EAAWb,GAClBW,EAAQX,GAGV,SAASc,EAAcC,GACrBH,EAAWG,GAGb,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEhB,KAAK,SACLgB,UAAS,yBAAoBN,IAAaf,EAASsB,SAAW,WAAa,IAC3EC,QAAS,kBAAML,EAAWlB,EAASsB,WAHrC,iCAQA,wBACEjB,KAAK,SACLgB,UAAS,4BAAuBN,IAAaf,EAASwB,OAAS,WAAa,IAC5ED,QAAS,kBAAML,EAAWlB,EAASwB,SAHrC,4BAQA,wBACEnB,KAAK,SACLgB,UAAS,4BAAwBjB,EAAuB,GAAb,YAC3CmB,QAAS,kBAAMJ,GAAef,IAHhC,sBAQEA,GAAWW,IAAaf,EAASc,OACjC,wBACET,KAAK,SACLgB,UAAU,4BACVE,QAAS,WACPJ,GAAc,GACdD,EAAW,IALf,sBAaJ,6BACGhB,EACCD,EACA,CAAEG,UAASC,KAAMU,IACjBU,KAAI,SAAAC,GAAI,OACR,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC1GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5a0faf7b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  reverse: boolean,\n  type: number,\n};\n\nfunction ReorderGoods(goods: string[], { reverse, type }: ReorderOptions) {\n  const initialGoods = [...goods];\n\n  switch (type) {\n    case 1:\n      initialGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case 2:\n      initialGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (reverse) {\n    initialGoods.reverse();\n  }\n\n  return initialGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, useType] = useState(SortType.NONE);\n  const [reverse, useReverse] = useState(false);\n\n  function ChangeType(type: SortType) {\n    useType(type);\n  }\n\n  function ChangeReverse(reverseType: boolean) {\n    useReverse(reverseType);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET ? 'is-light' : ''}`}\n          onClick={() => ChangeType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH ? 'is-light' : ''}`}\n          onClick={() => ChangeType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!reverse ? 'is-light' : ''}`}\n          onClick={() => ChangeReverse(!reverse)}\n        >\n          Reverse\n        </button>\n\n        {(reverse || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              ChangeReverse(false);\n              ChangeType(0);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {ReorderGoods(\n          goodsFromServer,\n          { reverse, type: sortType },\n        ).map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}